Milestones:

(1): MAC and Phone Cube demo;
(1.1): Cube on MAC (Checked).
(1.2): Cube on iphone. (Checked).
-- Not sure why that I am fighting the build error for a day but the normal gltf viewer doesn't have this problem...
-- I have to follow: https://stackoverflow.com/questions/24333981/ios-app-with-framework-crashed-on-device-dyld-library-not-loaded-xcode-6-beta to make the link framework optional, but it's different from what the example project shows...

-- Ok the above solution has a problem. That doesn't link in the real machine code. So, the gltf func doesn't do any works.
-- The problem still exists in the 'linking -- search path'. After figuring out that I can open the bundle, everything becomes easy to see what does the linker see.



(2): Texture Cube on MAC and Phone; (Done)
(2.1): Texture Load & Material hook up.
(2.2): Finish on MAC.
(2.3): Finish on iPhone.
-- NSImage on MAC (AppKit) and UIImage on IOS (UIKit)


(3): PBR related - default point lights scene
(3.1): Port Shaders (Done)
(3.2): Default 4 lights setup -- Use PBR balls to check port results.
(3.3): Make sure iphone also works.
(3.4): Implement other gltf basic models.
(3.4.1): Support vert color. (Done)

(3.x.1): Proper Camera Model. (Done)
(3.x.2): Advanced feature: MSAA research.


(4): Github, Gallay, Resume, marketing camera clean up
(4.1): Add UI control for object rotation, camera dist control, and limited camera vertical view rotation control. (Done)
(4.3): Video of MacOS and IOS on Youtube.
(4.4): Github and personal website gallay update.
List: CompareNormal, CompareMetallic, Duck, AmbientOcclusion, CompareBaseColor
Need Feature: Ambient Light and point light intensity control.

(4.x.1): Load/Unload different model without changing the model in the default scene.
(4.x.2): Add scenegraph tree to UI on MacOS.
(4.x.3): Wrap Mikktsapce tangent generation. (NO Need)
